import 'package:models/models.dart';
import 'package:repositories/repositories.dart';

class ConstatntsInfo {
  final CatalogRepository _catalogRepository;

  ConstatntsInfo(this._catalogRepository);

  Future<List<OrderDataModel>> getOrders() async {
    final products = await _catalogRepository.getProducts();
    return [
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 56574,
        status: 'Отменен',
        createAt: '13.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'При получении',
        workingHours: 'Пн-Чт 10:00-22:00, Пт-Сб 10:00-23:00, Вс 10:00-22:00',
        orderNumber: 56874,
        status: 'Оплачено',
        createAt: '13.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Чт 10:00-22:00, Пт-Сб 10:00-23:00, Вс 10:00-22:00',
        orderNumber: 66884,
        status: 'Оплачено',
        createAt: '13.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж',
        products: [
          ShoppingCartDataModel(
            product: products[4],
            count: 1,
            price: products[4].price,
            id: products[4].id,
          ),
          ShoppingCartDataModel(
            product: products[5],
            count: 1,
            price: products[5].price,
            id: products[5].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[4].price + products[5].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Чт 10:00-22:00, Пт-Сб 10:00-23:00, Вс 10:00-22:00',
        orderNumber: 75384,
        status: 'Отменен',
        createAt: '13.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 55384,
        status: 'Отменен',
        createAt: '14.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 54384,
        status: 'Отменен',
        createAt: '14.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 57784,
        status: 'Отменен',
        createAt: '14.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 47884,
        status: 'Отменен',
        createAt: '14.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 38884,
        status: 'Отменен',
        createAt: '15.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 88884,
        status: 'Отменен',
        createAt: '15.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 47834,
        status: 'Отменен',
        createAt: '15.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 57834,
        status: 'Отменен',
        createAt: '16.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 67834,
        status: 'Отменен',
        createAt: '16.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 48234,
        status: 'Отменен',
        createAt: '16.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 68234,
        status: 'Отменен',
        createAt: '16.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 46234,
        status: 'Отменен',
        createAt: '16.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 56234,
        status: 'Отменен',
        createAt: '16.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 66234,
        status: 'Отменен',
        createAt: '16.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 33234,
        status: 'Отменен',
        createAt: '16.01.2024',
      ),
      OrderDataModel(
        adress: 'Москва, ТЦ Афимолл Сити, 2 этаж, Department Store',
        products: [
          ShoppingCartDataModel(
            product: products[0],
            count: 1,
            price: products[0].price,
            id: products[0].id,
          ),
          ShoppingCartDataModel(
            product: products[1],
            count: 1,
            price: products[1].price,
            id: products[1].id,
          ),
        ],
        numberProducts: 2,
        amountPaid: products[0].price + products[1].price,
        receivingType: 'Самовывоз',
        typePay: 'Банковской картой',
        workingHours: 'Пн-Вс 10:00-20:00',
        orderNumber: 83234,
        status: 'Отменен',
        createAt: '16.01.2024',
      ),
    ];
  }

  List<String> brandsWoman = [
    '3JUIN',
    'A Better Mistake',
    'Act N°1',
    'Actualee',
    'Aeron',
    'Agnona',
    'Alberta Ferretti',
    'Alevi',
    'Alexander McQueen',
    'Alexandre Vauthier',
    'Andrea Ventura',
    'Aqua di Parma',
    'Arizona Love',
    'Arma',
    'Art Dealer',
    'Balenciaga',
    'Barton Perreira',
    'Benedetta Bruzziches',
    'Blaze Milano',
    'Boss',
    'Bottega Veneta',
    'Burberry',
    'Bvlgari',
    'By Far',
    'Carolina Herrera',
    'Carrera',
    'Casadei',
    'Celine',
    'Chanel',
    'Charriol',
    'Chloe',
    'D.A.T.E.',
    'Daname',
    'Diesel',
    'Dior',
    'Disop',
    'Dita',
    'Dolce&Gabbana',
    'Dsquared2',
    'Dunhill',
    'Duvetica',
    'Eera',
    'Elie Saab',
    'Emporio Armani',
    'Erika Cavallini',
    'Estee Lauder',
    'Ex Nihilo',
    'Faith Connexion',
    'Fendi',
    'Filippo De Laurentiis',
    'Forte Forte',
    'Frederic Malle',
    'Furla',
    'GCDS',
    'Gia Borghini',
    'Giorgio Armani',
    'Givenchy',
    'Glory',
    'Gucci',
    'Guerlain',
    'Guess',
    'Haffmans&Neumeister',
    'Hermes',
    'Hibourama',
    'Hugo',
    'IC Berlin',
    'IRO',
    'Isabel Marant',
    'Ivy Oak',
    'Jimmy Choo',
    'Jo Malone',
    'Khaite',
    'Kilian',
    'Ksubi',
    'Le Silla',
    'Leisure Society',
    'Levi’s',
    'Linda Farrow',
    'Loewe',
    'Louis XIV',
    'Lunor',
    'LVIR',
    'Lyia',
    'Manebi',
    'Marc Jacobs',
    'Margaux Lonnberg',
    'Matsuda',
    'Max Mara',
    'MC2 Saint Barth',
    'Megapolis',
    'Michael Kors',
    'Miru',
    'Misho',
    'Missoni',
    'MM6 Maison Margiela',
    'Moncler',
    'MSGM',
    'MVP Wardrobe',
    'N°21',
    'Narciso Rodriguez',
    'Nivose',
    'Norma Kamali',
    'Oakley',
    'Oliver Peoples',
    'Orgreen',
    'Osoi',
    'P.A.R.O.S.H.',
    'Paco Rabanne',
    'Palto',
    'Paris Texas',
    'Pence',
    'Persol',
    'Philipp Plein',
    'Philipp Plein Sport',
    'Philippe Model',
    'Philosophy Di Lorenzo Serafini',
    'Polaroid',
    'Prada',
    'Premio',
    'Ray-Ban',
    'Re/Done',
    'Ricagno',
    'Saint Laurent',
    'Salvatore Santoro',
    'Saphir',
    'Seventh Street',
    'Shiseido',
    'Si Rossi by Sergio Rossi',
    'Sisley',
    'Smith',
    'Sonora',
    'Ssheena',
    'Stax',
    'Stella McCartney',
    'Tagliatore',
    'The Andamane',
    'Themoire',
    'Thom Browne',
    'Tiffany',
    'Tod’s',
    'Tom Ford',
    'Tramontano',
    'Valentino',
    'Versace',
    'Vogue',
    'Wolford',
    'Yohji Yamamoto',
    'Yuzefi',
  ];

  List<String> brandsMan = [
    '7 For All Mankind',
    'A Better Mistake',
    'Abla by Sartorio',
    'Agnona',
    'Alchemist',
    'Alexander McQueen',
    'Andrea Ventura',
    'Armani Exchange',
    'Balenciaga',
    'Barba Napoli',
    'Barrett',
    'Barton Perreira',
    'Berluti',
    'Bikkembergs',
    'Boss',
    'Bottega Veneta',
    'Brioni',
    'Brunello Cucinelli',
    'Burberry',
    'Bvlgari',
    'Carrera',
    'Chanel',
    'Charriol',
    'Corneliani',
    'D.A.T.E.',
    'David Beckham',
    'Diesel',
    'Dior',
    'Disop',
    'Dita',
    'Dolce&Gabbana',
    'Doucals',
    'Dsquared2',
    'Dunhill',
    'Duvetica',
    'Emporio Armani',
    'Ex Nihilo',
    'Fefe Napoli',
    'Fendi',
    'Filippo De Laurentiis',
    'Frederic Malle',
    'GCDS',
    'Giorgio Armani',
    'Givenchy',
    'Glory',
    'Gucci',
    'Guess',
    'Haffmans&Neumeister',
    'Hugo',
    'IC Berlin',
    'IH NOM UH NIT',
    'Isabel Benenato',
    'Jean Paul Gaultier',
    'Jimmy Choo',
    'Jo Malone',
    'Kilian',
    'Kired',
    'Ksubi',
    'Lardini',
    'Leisure Society',
    'Levi’s',
    'Linda Farrow',
    'Loewe',
    'Louis XIV',
    'Lunor',
    'Matsuda',
    'Maybach',
    'MC2 Saint Barth',
    'Megapolis',
    'Miru',
    'Missoni',
    'MM6 Maison Margiela',
    'Montblanc',
    'MSGM',
    'Narciso Rodriguez',
    'Nivose',
    'Oakley',
    'Oliver Peoples',
    'Paco Rabanne'
        'Pence',
    'Perofil',
    'Persol',
    'Peserico',
    'Philipp Plein',
    'Philipp Plein Sport',
    'Philippe Model',
    'Piacenza Cashmere',
    'Polaroid',
    'Prada',
    'Premio',
    'Ray-Ban',
    'Run of',
    'Saint Laurent',
    'Saphir',
    'Seventh Street',
    'Sisley',
    'Smith',
    'Stax',
    'Svevo Parma',
    'Thom Browne',
    'Tiffany',
    'Tod`s',
    'Tom Ford',
    'Tramontano',
    'Valentino',
    'Versace',
    'Yohji Yamamoto',
    'Zilli',
  ];

  List<String> brandsChilren = [
    'Aspesi',
    'Boss',
    'Carrera',
    'Chloe',
    'Diesel',
    'Dsquared2',
    'Glory',
    'Guess',
    'Marni',
    'MM6 Maison Margiela',
    'N°21',
    'Polaroid',
    'Ray-Ban',
    'Safilo',
    'Seventh Street',
    'Vogue',
  ];

  List<MainCategoryModel> categoryWoman = const [
    MainCategoryModel(
      title: 'Оптика',
      imagePath: 'optics_woman',
      pathMenu: '/optika/',
    ),
    MainCategoryModel(
      title: 'Обувь',
      imagePath: 'footwear_woman',
      pathMenu: '/obuv/',
    ),
    MainCategoryModel(
      title: 'Одежда',
      imagePath: 'clothes_woman',
      pathMenu: '/odezhda/',
    ),
    MainCategoryModel(
      title: 'Сумки',
      imagePath: 'bags_woman',
      pathMenu: '/sumki/',
    ),
    MainCategoryModel(
      title: 'Аксессуары',
      imagePath: 'accessories_woman',
      pathMenu: '/aksessuary/',
    ),
    MainCategoryModel(
      title: 'Косметика',
      imagePath: 'cosmetics_woman',
      pathMenu: '/kosmetika/',
    ),
  ];

  List<MainCategoryModel> categoryMan = const [
    MainCategoryModel(
      title: 'Оптика',
      imagePath: 'optics_man',
      pathMenu: '/muzhchinam/optika/',
    ),
    MainCategoryModel(
      title: 'Обувь',
      imagePath: 'footwear_man',
      pathMenu: '/muzhchinam/obuv/',
    ),
    MainCategoryModel(
      title: 'Одежда',
      imagePath: 'clothes_man',
      pathMenu: '/muzhchinam/odezhda/',
    ),
    MainCategoryModel(
      title: 'Сумки',
      imagePath: 'bags_man',
      pathMenu: '/muzhchinam/sumki/',
    ),
    MainCategoryModel(
      title: 'Аксессуары',
      imagePath: 'accessories_man',
      pathMenu: '/muzhchinam/aksessuary/',
    ),
    MainCategoryModel(
      title: 'Косметика',
      imagePath: 'cosmetics_man',
      pathMenu: '/muzhchinam/kosmetika/',
    ),
  ];

  List<MainCategoryModel> categoryChild = const [
    MainCategoryModel(
      title: 'Оптика',
      imagePath: 'optics_child',
      pathMenu: '/detyam/optika/',
    ),
    MainCategoryModel(
      title: 'Для девочек',
      imagePath: 'for_girls',
      pathMenu: '/detyam/odezhda-dlya-devochek/',
    ),
    MainCategoryModel(
      title: 'Для мальчиков',
      imagePath: 'for_boys',
      pathMenu: '/detyam/odezhda-dlya-malchikov/',
    ),
    MainCategoryModel(
      title: 'Сумки',
      imagePath: 'bags_child',
      pathMenu: '/detyam/sumki/',
    ),
    MainCategoryModel(
      title: 'Аксессуары',
      imagePath: 'accessories_child',
      pathMenu: '/detyam/aksessuary/',
    ),
    MainCategoryModel(
      title: 'Для малышей',
      imagePath: 'for_child',
      pathMenu: '/detyam/dlya-malyshey/',
    ),
  ];

  List<String> listAlphabetAndNumber = [
    '0-9',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'R',
    'S',
    'T',
    'V',
    'W',
    'Y',
    'Z',
  ];
}
